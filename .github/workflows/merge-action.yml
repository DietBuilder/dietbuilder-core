name: merge-action.yml

on:
  push:
    branches: [ "main" ]

jobs:
  test-and-build-artifact:
    name: Test and build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run unit tests
        run: mvn -B test --file code/pom.xml

      - name: Set artifact version
        run: | 
          echo "PROJECT_VERSION=$(grep -m 1 '<version>' code/pom.xml | sed 's/.*<version>\(.*\)<\/version>.*/\1/')" >> $GITHUB_ENV

      - name: Build with Maven
        run: |
          mvn clean --file code/pom.xml
          mvn -B package --file code/pom.xml

      - name: Copy Jar file
        run: mv ./code/boot/target/boot-${{ env.PROJECT_VERSION }}.jar app.jar

      - name: Upload jar artifact
        uses: actions/upload-artifact@master
        with:
          name: jar-file
          path: app.jar

  build-image-and-push:
    runs-on: ubuntu-latest
    needs: test-and-build-artifact
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - id: flow-type
        run: |
          echo ::set-output name=release_minor::${{ contains(join(github.event.issue.labels.*.name, ' '), 'release:minor') }}
          echo ::set-output name=release_major::${{ contains(join(github.event.issue.labels.*.name, ' '), 'release:major') }}
          echo ::set-output name=hotfix::${{ contains(join(github.event.issue.labels.*.name, ' '), 'release:hotfix') }}

      - name: Download jar artifact
        uses: actions/download-artifact@master
        with:
          name: jar-file
          path: app.jar

      - name: Update hotfix version
        if: steps.flow-type.outputs.hotfix == 'true'
        run: |
          mvn -f code/pom.xml --batch-mode build-helper:parse-version versions:set -DgenerateBackupPoms=false -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion}
          echo "PROJECT_VERSION=$(grep -m 1 '<version>' code/pom.xml | sed 's/.*<version>\(.*\)<\/version>.*/\1/')" >> $GITHUB_ENV

      - name: Update hotfix version
        if: steps.flow-type.outputs.release_minor == 'true'
        run: |
          mvn -f code/pom.xml --batch-mode build-helper:parse-version versions:set -DgenerateBackupPoms=false -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.nextMinorVersion}.\${parsedVersion.incrementalVersion}
          echo "PROJECT_VERSION=$(grep -m 1 '<version>' code/pom.xml | sed 's/.*<version>\(.*\)<\/version>.*/\1/')" >> $GITHUB_ENV

      - name: Update hotfix version
        if: steps.flow-type.outputs.release_major == 'true'
        run: |
          mvn -f code/pom.xml --batch-mode build-helper:parse-version versions:set -DgenerateBackupPoms=false -DnewVersion=\${parsedVersion.nextMajorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion}
          echo "PROJECT_VERSION=$(grep -m 1 '<version>' code/pom.xml | sed 's/.*<version>\(.*\)<\/version>.*/\1/')" >> $GITHUB_ENV

      - uses: EndBug/add-and-commit@v9
        with:
          add: '.'
          author_name: github_bot
          message: 'Update incremental version'
          push: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push to docker registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags:  ${{ secrets.AZURE_URL }}/dietbuilder-core:${{ env.PROJECT_VERSION }}

      - name: Update version to snapshot
        run: |
          mvn -f code/pom.xml --batch-mode build-helper:parse-version versions:set -DgenerateBackupPoms=false -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion}-SNAPSHOT

      - uses: EndBug/add-and-commit@v9
        with:
          add: '.'
          message: 'Update SNAPSHOT version'
          author_name: github_bot