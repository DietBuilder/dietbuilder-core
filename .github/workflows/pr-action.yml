name: pr-action.yml

on:
  pull_request:
    branches: [ "main" ]

jobs:
  prepare-pull-request:
    runs-on: ubuntu-latest
    name: Prepare pull request
    steps:
      - name: Add hotfix release label if required
        uses: actions-ecosystem/action-add-labels@v1
        if: ${{ ! contains(join(github.event.issue.labels.*.name, ' '), 'release:') }}
        with:
          labels: |
            release:hotfix

  build-jar-and-push:
    name: Build and send to registry
    runs-on: ubuntu-latest
    needs: prepare-pull-request
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set artifact version
        run: echo "PROJECT_VERSION=$(grep -m 1 '<version>' code/pom.xml | sed 's/.*<version>\(.*\)<\/version>.*/\1/')" >> $GITHUB_ENV

      - name: Run unit tests
        run: mvn -B test --file code/pom.xml

      - name: Build with Maven
        run: |
          mvn clean --file code/pom.xml
          mvn -B package --file code/pom.xml

      - name: Copy Jar file
        run: mv ./code/boot/target/boot-${{ env.PROJECT_VERSION }}.jar app.jar

      - name: Upload jar artifact
        uses: actions/upload-artifact@master
        with:
          name: jar-file
          path: app.jar

  build-image-and-push:
    runs-on: ubuntu-latest
    needs: build-jar-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set artifact version
        run: echo "PROJECT_VERSION=$(grep -m 1 '<version>' code/pom.xml | sed 's/.*<version>\(.*\)<\/version>.*/\1/')" >> $GITHUB_ENV

      - name: Download jar artifact
        uses: actions/download-artifact@master
        with:
          name: jar-file
          path: app.jar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push to docker registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags:  ${{ secrets.AZURE_URL }}/dietbuilder-core:${{ env.PROJECT_VERSION }}